#include <msp430.h>
#include "stateMachines.h"
#include "led.h"
#include "songs.h"

void state_advance()/* alternate between toggling red & green */
{
  static char currentState = 0;
  switch (currentState) {

  case 0:
    currentState = 1;
    play();
    break;
  case 1:
    currentState = 2;
    // buzzer_set_period(300);
    break;
  case 2:
    currentState = 3;
    // buzzer_set_period(400);
    break;
  case 3:
    currentState = 4;
    // buzzer_set_period(500);
    break;
  case 4:
    currentState = 5;
    // buzzer_set_period(500);
    break;
  case 5:
    currentState = 6;
    // buzzer_set_period(400);
    break;
  case 6:
    currentState = 7;
    // buzzer_set_period(300);
    break;
  case 7:
    currentState = 0;
    //buzzer_set_period(200);
    break;
  }
}

void stop(){
  buzzer_set_period(0);
}

char toggle_red()
{
  static char state = 0;

  switch(state){
  case 0:
    red_on = 1;
    state = 1;
    break;
  case 1:
    red_on = 0;
    state = 0;
    break;
  }
  return 1;
}

char toggle_green()
{
  char changed = 0;

  if(red_on){
    green_on ^= 1;
    changed = 1;
  }
  return changed;
}

void state_blink(){
  char changed = 0;

  static enum {R=0, G=1}
  color = G;
  switch(color){
  case R:
    changed = toggle_red();
    color = G;
    break;
  case G:
    changed = toggle_green();
    color = R;
    break;
  }

  led_changed = changed;
  led_update();
}

